services:
  postgres:
    image: postgres
    restart: on-failure
    env_file:
      - ./services/backend/.env
    ports:
      - "5435:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    user: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s

  frontend:
    build:
      context: .services/all-countries
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: always

  backend:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
    container_name: backend
    env_file:
      - ./services/backend/.env
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - uploads:/app/uploads
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./services/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    restart: always

volumes:
  postgres-data:
  uploads:  # Volume для хранения файлов

networks:
  app-network:
    driver: bridge
